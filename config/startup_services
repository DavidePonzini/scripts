#!/bin/bash

# Check if the script is run as root (admin)
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root (use sudo)" 
   exit 1
fi

# Check if dialog is installed
if ! command -v dialog &> /dev/null; then
    echo "The 'dialog' utility is required but not installed. Please install it using 'sudo apt install dialog'."
    exit 1
fi

# Create a temporary file in /tmp/ to store selected services
TEMP_FILE=$(mktemp /tmp/services_selected.XXXXXX)

# Get the list of services from /etc/init.d/
services=($(ls /etc/init.d/))

# Build the dialog items
dialog_items=()

for service in "${services[@]}"; do
    # Check if the service is running
    if service "$service" status > /dev/null 2>&1; then
        status="enabled"
        item_status="on"
    else
        status="disabled"
        item_status="off"
    fi
    dialog_items+=("$service" "$status" "$item_status")
done

# Show the dialog with size 0 for both height and width to automatically fit the content
dialog --checklist "Select services to enable/disable (Press SPACE to toggle selection)" 0 0 0 "${dialog_items[@]}" 2>"$TEMP_FILE"

# Check if the user pressed Cancel
if [ $? -ne 0 ]; then
    echo "Operation cancelled."
    rm -f "$TEMP_FILE"
    exit 1
fi

# Read the selected services
selected_services=$(cat "$TEMP_FILE")

# Convert the selected services to an array
eval "selected_services_array=($selected_services)"

# Process the services
for service in "${services[@]}"; do
    prev_status=$(service "$service" status > /dev/null 2>&1 && echo "enabled" || echo "disabled")
    if [[ " ${selected_services_array[@]} " =~ " $service " ]]; then
        # Service is selected, try to start if disabled
        new_status="enabled"
    else
        # Service is not selected, try to stop if enabled
        new_status="disabled"
    fi
    if [ "$prev_status" != "$new_status" ]; then
        # The status has changed, so we need to start or stop the service
        if [ "$new_status" == "enabled" ]; then
            echo "Starting $service..."
            sudo service "$service" start
        else
            echo "Stopping $service..."
            sudo service "$service" stop
        fi
    fi
done

# Clean up
rm -f "$TEMP_FILE"

echo "Operation completed."
