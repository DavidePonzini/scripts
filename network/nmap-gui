#!/bin/bash -e

source $SCRIPTS/lib/messages
source $SCRIPTS/lib/text-color

# Define the dialog exit status codes
DIALOG_OK=0
DIALOG_CANCEL=1
DIALOG_HELP=2
DIALOG_EXTRA=3
DIALOG_ITEM_HELP=4
DIALOG_ESC=255

# Duplicate (make a backup copy of) file descriptor 1 on descriptor 3
exec 3>&1
trap cleanup 0 1 2 5 15

# Command builder
command='nmap'


#############################################################################

function close() {
	_msg_info 'Quitting' >&2
	exit 99
}

function cleanup() {
	_msg_info 'Cleaning up...' >&2
	exec 3>&-
}

function select_host() {
	ans=$(dialog --inputbox 'Target' 0 0 \
		'192.168.1.*' \
		2>&1 1>&3)
	ret=$?
	case $ret in
		$DIALOG_OK)
			echo "$ans"
			;;
		$DIALOG_CANCEL)
			close
			;;
		$DIALOG_ESC)
			close
			;;
	esac
}

function select_action() {
	ans=$(dialog --menu 'Select action' 0 0 0 \
		'Host discovery' '' \
		'Port scan' '' \
		2>&1 1>&3)
	ret=$?
	case $ret in
		$DIALOG_OK)
			echo "$ans"
			;;
		$DIALOG_CANCEL)
			close
			;;
		$DIALOG_ESC)
			close
			;;
	esac
}

function select_scan_type() {
	ans=$(dialog --radiolist 'Select scan type' 0 0 7 \
		'-sL' 'List scan' off \
		'-sn' 'No port scan' off \
		'-Pn' 'No ping' off \
		'-PS' 'TCP SYN ping' off \
		'-PA' 'TCP ACK ping' off \
		'-PU' 'UPD ping' off \
		'-PR' 'ARP ping' off \
		2>&1 1>&3)
	ret=$?
	case $ret in
		$DIALOG_OK)
			if [ -z "$ans" ]; then
				select_scan_type
			else
				echo "$ans"
			fi
			;;
		$DIALOG_CANCEL)
			close
			;;
		$DIALOG_ESC)
			close
			;;
	esac
}

function select_speed() {
	ans=$(dialog --radiolist 'Select speed' 0 0 0 \
		'-T0' 'Paranoid' off \
		'-T1' 'Sneaky' off \
		'-T2' 'Polite' off \
		'-T3' 'Normal' on \
		'-T4' 'Aggressive' off \
		'-T5' 'Insane' off \
		2>&1 1>&3)
	ret=$?;
	case $ret in
		$DIALOG_OK)
			echo "$ans"
			;;
		$DIALOG_CANCEL)
			close
			;;
		$DIALOG_ESC)
			close
			;;
	esac
}

function select_verbosity() {
	ans=$(dialog --radiolist 'Select verbosity' 0 0 0 \
		'' 'Off' on \
		'-v' 'Verbose' off \
		'-vv' 'Very verbose' off \
		2>&1 1>&3)
	ret=$?;
	case $ret in
		$DIALOG_OK)
			echo "$ans"
			;;
		$DIALOG_CANCEL)
			close
			;;
		$DIALOG_ESC)
			close
			;;
	esac
}


#############################################################################

command="$command $(select_host)"

action=$(select_action)
if [ "$action" == 'Host discovery' ]; then
	command="$command $(select_scan_type)"
elif [ "$action" == 'Port scan' ]; then
	:
fi

command="$command $(select_speed)"
command="$command $(select_verbosity)"




clear
echo -n 'Generated command: '
_colored_text "$command" $_TEXT_STYLE_ITALIC $_TEXT_STYLE_UNDERLINE

while true; do
	read -p 'Execute? (Y/n)' ans

	if [[ -z "$ans" || "$ans" == 'y' || "$ans" == 'Y' ]]; then
		exec $command
		break
	elif [[ "$ans" == 'n' || "$ans" == 'N' ]]; then
		break
	fi
done
