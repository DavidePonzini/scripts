#!/bin/bash -e

# Note: default values below cannot be empty string, since they mess up positional parameters

_TEXT_STYLE_NORMAL='0'
_TEXT_STYLE_BOLD='1'
_TEXT_STYLE_DIM='2'
_TEXT_STYLE_ITALIC='3'
_TEXT_STYLE_UNDERLINE='4'
_TEXT_STYLE_UNDERLINE_DOUBLE='4:2'
_TEXT_STYLE_UNDERLINE_CURLY='4:3'
_TEXT_STYLE_BLINK='5'
_TEXT_STYLE_REVERSE='7'
_TEXT_STYLE_INVISIBLE='8'		# Invisible but copy-pasteable
_TEXT_STYLE_STRIKETHROUGH='9'
_TEXT_STYLE_OVERLINE='53'

_TEXT_COLOR_WHITE='NONE'
_TEXT_COLOR_DARKGRAY='30'
_TEXT_COLOR_RED='31'
_TEXT_COLOR_GREEN='32'
_TEXT_COLOR_YELLOW='33'
_TEXT_COLOR_BLUE='34'
_TEXT_COLOR_PURPLE='35'
_TEXT_COLOR_CYAN='36'
_TEXT_COLOR_LIGHTGRAY='37'

_TEXT_BACKGROUND_NONE='NONE'
_TEXT_BACKGROUND_DARKGRAY='40'
_TEXT_BACKGROUND_RED='41'
_TEXT_BACKGROUND_GREEN='42'
_TEXT_BACKGROUND_YELLOW='43'
_TEXT_BACKGROUND_BLUE='44'
_TEXT_BACKGROUND_PURPLE='45'
_TEXT_BACKGROUND_CYAN='46'
_TEXT_BACKGROUND_LIGHTGRAY='47'

_TEXT_STYLE_DEFAULT=${_TEXT_STYLE_NORMAL}
_TEXT_COLOR_DEFAULT=${_TEXT_COLOR_WHITE}
_TEXT_BACKGROUND_DEFAULT=${_TEXT_BACKGROUND_NONE}


# sets the current font as indicated by its arguments
function _text_color_set() {
	for col in "$@"; do
		if [ "$col" == "NONE" ]; then
			continue
		fi

		printf "\e[${col}m"
	done
}

# resets the current font to its default settings
function _text_color_reset() {
	printf '\e[0m'
}

# prints a string without a new line
# supports multiple optional formatting flags
function _colored_text_n() {
	text=${1?Usage: _colored_text_n <text> [color_option...]}

	shift 1
	_text_color_reset
	_text_color_set $@

	printf "$text"

	text_len=${#text}
	_CURRENT_LINE_LEN=$((_CURRENT_LINE_LEN + text_len))

	_text_color_reset
}

# prints a string with a new line at the end
# supports multiple optional formatting flags
function _colored_text() {
	msg_len=${#1}
	term_len=$(tput cols)
	pad_len=$((term_len - msg_len - _CURRENT_LINE_LEN))

	_colored_text_n "$@"
	printf "%${pad_len}s\n" # | tr ' ' '*'

	_CURRENT_LINE_LEN=0
}
